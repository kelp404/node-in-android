#!/bin/bash
EXE_NAME=${0##*/}
function _msg { echo "[$EXE_NAME-no-lrt]" "$@" >&2; }
function _dbg { [[ $AGCC_DBG == 1 ]] && _msg "$@"; }

###############################################################################
#Search the exe behind me in $PATH. Even faster than {for f in `type -ap name`}

case $EXE_NAME in
cc) ALT_EXE_NAME="gcc";;
gcc) ALT_EXE_NAME="cc";;
c++) ALT_EXE_NAME="g++";;
g++) ALT_EXE_NAME="c++";;
*) unset ALT_EXE_NAME;;
esac

IFS=: pathList=($PATH); unset IFS  #split $PATH by :, save to array

for name in $EXE_NAME $ALT_EXE_NAME; do
    EXE_PATH=""; foundMyself=""
    for d in "${pathList[@]}"; do
        if [[ -f $d/$name && -x $d/$name ]]; then
            if [[ $d/$name -ef "$0" ]]; then #is it actually myself? (symbol link also works)
                foundMyself=YES
            elif [[ $foundMyself ]]; then
                EXE_PATH=$d/$name
                break
            fi
        fi
    done
    [[ $EXE_PATH ]] && break;
done

if [[ ! $EXE_PATH ]]; then
    _msg "$EXE_NAME${ALT_EXE_NAME+ or }$ALT_EXE_NAME not found."
    exit 127
fi

###############################################################################
#if already have no -lrt option then run command without change.

ind=""; count=0; i=0
for arg in "$@"; do
    if [[ $arg == -lrt ]]; then
        if [[ $count == 0 ]]; then
            ind=$i
            count=1
        elif [[ $count == 1 ]]; then
            count=">=2"
            break
        fi
    fi
    ((i++))
done

if [[ ! $ind ]]; then
    _dbg "call '$EXE_PATH' (no -lrt option yet)"
    exec "$EXE_PATH" "$@"
    exit
fi

_dbg found count: $count, first ind: $ind

###############################################################################
#otherwise run command without -lrt

_msg "call '$EXE_PATH' without -lrt option"
if [[ $count == 1 ]]; then
    exec "$EXE_PATH" "${@:1:$ind}" "${@:$((ind+2))}"
else
    ARGS=()
    for arg in "$@"; do
        [[ $arg != -lrt ]] && ARGS[${#ARGS[@]}]=$arg
    done
    exec "$EXE_PATH" "${ARGS[@]}"
fi
